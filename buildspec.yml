version: 0.2

env:
  # Reference the secret stored in AWS Secrets Manager
  # These provide the DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD variables
  secrets-manager:
    DOCKERHUB_USERNAME: DockerHubCredentialsForGenDJ:DOCKERHUB_USERNAME # SecretName:JSONKey
    DOCKERHUB_PASSWORD: DockerHubCredentialsForGenDJ:DOCKERHUB_PASSWORD # SecretName:JSONKey
  # IMAGE_REPO_NAME and IMAGE_TAG are expected to be set as environment
  # variables directly on the CodeBuild project by the setup_codebuild.py script.

phases: # Top level key
  install: # Level 1 dictionary key under phases
    # runtime-versions:
    #   python: 3.10 # Uncomment if using a CodeBuild image where specific runtime needed
    commands: # Level 2 list key under install
      - echo "--- Install Phase ---" # Level 3 list item
      - echo "Checking system info..."
      - nvidia-smi || echo "nvidia-smi not found or failed (Might be okay)"
      - python --version || python3 --version || echo "Python not found"
      - pip --version || pip3 --version || echo "Pip not found"
      - echo "Installing Python dependencies from requirements.txt..."
      # Ensure pip uses cache for potentially faster builds
      # Use pip3 if python/pip map to python2 on the build image
      - pip install --cache-dir .pip-cache -r requirements.txt || pip3 install --cache-dir .pip-cache -r requirements.txt
  pre_build: # Level 1 dictionary key under phases
    commands: # Level 2 list key under pre_build
      - echo "--- Pre-Build Phase ---" # Level 3 list item
      - echo "Running model caching script (cache-models.py)..."
      # Run the caching script; fail the build if it exits non-zero
      # Use python3 if needed
      - python cache-models.py || python3 cache-models.py
      - echo "Verifying cached model files..."
      # Step 1: Define the verification logic in a script block
      - |
        #!/bin/bash
        set -e # Exit immediately if a command exits with a non-zero status.
        EXPECTED_FILES=(
          "saved_pipeline/taesdxl/config.json"
          "saved_pipeline/taesdxl/diffusion_pytorch_model.safetensors"
          "saved_pipeline/taesdxl/diffusion_pytorch_model.bin"
          "saved_pipeline/sdxl-turbo/model_index.json"
          "saved_pipeline/sdxl-turbo/config.json"
          "saved_pipeline/sdxl-turbo/vae/config.json"
          "saved_pipeline/sdxl-turbo/unet/config.json"
          "saved_pipeline/sdxl-turbo/text_encoder/config.json"
          "saved_pipeline/sdxl-turbo/text_encoder_2/config.json"
          "saved_pipeline/sdxl-turbo/scheduler/scheduler_config.json"
          "saved_pipeline/sdxl-turbo/tokenizer/tokenizer_config.json"
          "saved_pipeline/sdxl-turbo/tokenizer_2/tokenizer_config.json"
        )
        MISSING=0
        echo "Starting verification of ${#EXPECTED_FILES[@]} expected files..."
        for f in "${EXPECTED_FILES[@]}"; do
          if [ ! -f "$f" ]; then
            echo "Error: Missing required cached file: $f"
            MISSING=1
          else
            echo "Verified: $f" # Added back for clarity during this test
          fi
        done
        if [ "$MISSING" -ne 0 ]; then
          echo "Aborting build due to missing cached files."
          exit 1
        else
           echo "All expected cached files verified successfully."
        fi
      # Step 2: Log in to Docker Hub (Now clearly a separate command)
      - echo "Logging in to Docker Hub..."
      # Use the credentials fetched from Secrets Manager
      # Ensure DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD vars are correctly populated by env.secrets-manager
      - echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
  build: # Level 1 dictionary key under phases
    commands: # Level 2 list key under build
      - echo "--- Build Phase ---" # Level 3 list item
      # IMAGE_REPO_NAME and IMAGE_TAG come from CodeBuild project environment variables
      - echo "Building Docker image: $IMAGE_REPO_NAME:$IMAGE_TAG"
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG -f Dockerfile.serverless .
  post_build: # Level 1 dictionary key under phases
    commands: # Level 2 list key under post_build
      - echo "--- Post-Build Phase ---" # Level 3 list item
      # IMAGE_REPO_NAME and IMAGE_TAG come from CodeBuild project environment variables
      - echo "Pushing Docker image to Docker Hub: $IMAGE_REPO_NAME:$IMAGE_TAG"
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Build and push completed successfully."

# artifacts: # Top level key (Ensure this line starts at column 0 or same level as 'phases' and 'env')
#   files:   # Level 1 dictionary key under artifacts
#     - '**/*' # Level 2 list item
